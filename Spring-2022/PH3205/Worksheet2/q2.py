import numpy as np
import matplotlib.pyplot as plt 

x_N = {
    2 : (-1/(3**0.5), 1/(3**0.5)),
    3 : (-((3/5)**0.5), 0, (3/5)**0.5),
    4 : (-((3/7 - (2/7)*((6/5)**0.5))**0.5), (3/7 - (2/7)*((6/5)**0.5))**0.5, -((3/7 + (2/7)*((6/5)**0.5))**0.5),(3/7 + (2/7)*((6/5)**0.5))**0.5 ),
    5 : ((-1/3)*((5 - 2*((10/7)**0.5))**0.5), (1/3)*((5 - 2*((10/7)**0.5))**0.5), 0, (-1/3)*((5 + 2*((10/7)**0.5))**0.5), (1/3)*((5 + 2*((10/7)**0.5))**0.5))
}

C_N = {
    2 : (1, 1),
    3 : (5/9, 8/9, 5/9),
    4 : ((18+(30**0.5))/36, (18+(30**0.5))/36, (18-(30**0.5))/36, (18-(30**0.5))/36), 
    5 : ((322+13*(70**0.5))/900, (322+13*(70**0.5))/900, 128/225, (322-13*(70**0.5))/900, (322-13*(70**0.5))/900 )
    }

f = lambda x: (4*x + 4)*np.exp(4*x + 4)

exact_val = 5216.926
error = []
n = [2,3,4,5]

for i in n:
    xs = x_N[i]
    weight = C_N[i]
    val = 0
    for _ in range(len(xs)):
        val += weight[_]*f(xs[_])
    e = abs(exact_val - val)
    error.append(e)

plt.plot(n, error, '-o')
plt.xlabel("n values")
plt.ylabel("error values")
plt.show()
